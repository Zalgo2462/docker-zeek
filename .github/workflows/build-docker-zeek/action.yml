name: 'build and publish a specific version of docker-zeek'
description: 'Builds and publishes a specified version of Zeek using Docker. Assumes code has been checked out.'
inputs:
  version: 
    description: 'Version of Zeek to build'
    required: true
  af-packet:
    description: 'Version of the Zeek AF-packet plug-in to install'
    required: true
  zkg:
    description: 'Version of zkg to install from pip'
    required: true
  tag:
    description: 'The tag for the Docker image. If this tag contains "lts", this image will also be tagged with the major version"'
    required: true
  DOCKER_USERNAME:
    description: 'DockerHub username'
    required: true
  DOCKER_TOKEN:
    description: 'DockerHub token'
    required: true

runs:
  using: "composite"
  steps:
    - 
      name: Set up QEMU # used for arm64 builds
      uses: docker/setup-qemu-action@v1
    -
      name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.DOCKER_USERNAME }}
        password: ${{ inputs.DOCKER_TOKEN }}
    - 
      name: Parse semver string # allows multiple docker tags like 3.0.0, 3.0, and 3
      id: semver_parser 
      uses: booxmedialtd/ws-action-parse-semver@v1
      with:
        input_string: "${{ inputs.version }}"
    -
      name: Prepare docker tags  # allows multiple docker tags like 3.0.0, 3.0, and 3
      id: prep
      run: |
        DOCKER_IMAGE=activecm/zeek
        # e.g. lts or latest
        TAGS="${DOCKER_IMAGE}:${{ inputs.tag }}"
        if [[ "${{ inputs.tag }}" =~ "lts" ]]; then
          # e.g. 3
          TAGS="$TAGS,${DOCKER_IMAGE}:${{ steps.semver_parser.outputs.major }}"
        fi
        # e.g. 3.0
        TAGS="$TAGS,${DOCKER_IMAGE}:${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}"
        # e.g. 3.0.0
        TAGS="$TAGS,${DOCKER_IMAGE}:${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}.${{ steps.semver_parser.outputs.patch }}"
        # make tags available to other actions steps as ${{ steps.prep.outputs.tags }}
        echo ::set-output name=tags::${TAGS}
    -
      name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ inputs.version }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - 
      name: Build and push
      uses: docker/build-push-action@v2
      with:
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        tags: ${{ steps.prep.outputs.tags }}
        build-args: |
          ZEEK_VERSION=${{ inputs.version }}
          AF_PACKET_VERSION=${{ inputs.af-packet }}
          ZKG_VERSION=${{ inputs.zkg }}
        push: false
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
